/*
------------------------------------------------
Generated by Cradle {{version}}
https://github.com/daterre/Cradle

Original file: {{originalFile}}
Story format: {{storyFormatName}}
------------------------------------------------
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cradle;
using IStoryThread = System.Collections.Generic.IEnumerable<Cradle.StoryOutput>;
using {{storyFormatNamespace}};

public partial class @{{{storyName}}}: {{storyFormatClass}}
{

	#region Initialization
	// ---------------

	{{#macroLibs}}
	public readonly {{Type}} {{Name}};
	{{/macroLibs}}

	@{{storyName}}()
	{
		this.StartPassage = "{{{startPassage}}}";

		base.Vars = new Dictionary<string, StoryVar>();
		
		{{#vars}}
		if(!base.Vars.ContainsKey("{{{.}}})")) {base.Vars.Add("{{{.}}}", default(StoryVar));}
		{{/vars}}

		{{#macroLibs}}
		{{Name}} = new {{Type}}() { Story = this };
		{{/macroLibs}}

		base.Init();
		{{#passages}}
		passage{{Pid}}_Init();
		{{/passages}}
	}

	// ---------------
	#endregion

	{{#passages}}
	// .............
	// #{{Pid}}: {{{Name}}}

	void passage{{Pid}}_Init()
	{
		this.Passages[@"{{{Name}}}"] = new StoryPassage(@"{{{Name}}}", new string[]{ {{& Tags}} }, passage{{Pid}}_Main);
	}

	#line 1 "{{{DirectiveName}}}"
	IStoryThread passage{{Pid}}_Main()
	{
		{{#Code}}
		{{{& .}}}
		{{/Code}}
	}

	{{#Fragments}}
	#line 1 "{{{DirectiveName}}}#frag#{{FragId}}"
	IStoryThread passage{{Pid}}_Fragment_{{FragId}}()
	{
		{{#Code}}
		{{{& .}}}
		{{/Code}}
	}
	{{/Fragments}}

	{{/passages}}
}